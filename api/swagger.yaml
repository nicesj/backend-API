swagger: "2.0"
info:
  title: API
  description: This is a API specification for [futuremobile.net](https://futuremobile.net)
  version: 0.0.1
host: futuremobile.net
basePath: /
schemes:
  - https
paths:
  /rss:
    get:
      tags: 
        - SEO
      operationId: getRSS
      summary: Rich Site Summary
      description: Generate Rich Site Summary document
      produces:
        - application/xml+rss
        - text/plain
      responses:
        200:
          description: RSS document
          schema:
            $ref: "#/definitions/rss"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/notFound"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
  # https://github.com/go-swagger/go-swagger/issues/932
  /storage?c=readfile:
    get:
      tags:
        - Storage
      operationId: getStorageFile
      summary: get a file
      description: A client is going to get contents of a file
      produces:
        - application/octect-stream
        - text/plain
      parameters:
        - in: query
          name: c
          type: string
          description: readfile
        - in: query
          name: f
          type: string
          description: A file what would be transferred
      responses:
        200:
          description: download a file
          schema:
            type: file
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
  /storage?c=readdir:
    get:
      tags:
        - Storage
      operationId: getStorageFolder
      summary: Get a list of files and folders
      description: Get a list of files and folders in a given path (folder)
      produces:
        - application/json
      parameters:
        - in: query
          name: c
          type: string
          description: readdir
        - in: query
          name: r
          type: string
          description: A path of target folder
      responses:
        200:
          description: List of files or folders
          schema:
            $ref: "#/definitions/getStorageFolderResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
  /storage:
    post:
      tags:
        - Storage
      operationId: storage
      summary: Upload files to the storage
      description: Upload multiple files into the given path (folder)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: folder
          type: string
          description: A folder (path) to upload files
        - in: formData # https://swagger.io/docs/specification/2-0/file-upload/
          name: files
          type: array
          description: Array of file objects
          items:
            type: string
            format: binary
      responses:
        200:
          description: Status of file uploading
          schema:
            $ref: "#/definitions/storageResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
  /isUsed:
    head:
      tags:
        - User
      operationId: isUsed
      summary: Check whether the nickname or the id is duplicated
      description: Check whether the nickname or the id is duplicated
      produces:
        - text/plain
      parameters:
        - in: query
          name: nickname
          description: check the nickname whether it is duplicated or not
          type: string
        - in: query
          name: uid
          description: check the uid whether it is duplicated or not
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/OK"
        204:
          description: No Content
          schema:
            $ref: "#/definitions/noContent"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
  /userInfo?c=profile:
    get:
      tags: 
        - User
      summary: Retrieve user profile
      description: Retrieve user profile image
      operationId: getUserInfoProfile
      produces:
        - application/octect-stream
        - text/plain
      parameters:
        - in: query
          name: c
          description: command type
          type: string
        - in: query
          name: uid
          description: user id
          type: string
      responses:
        200:
          description: profile image
          schema:
            type: file
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/notFound"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
  /userInfo:
    get:
      tags: 
        - User
      summary: Retrieve user information
      description: Retrieve user information
      operationId: getUserInfo
      produces:
        - application/json
        - text/plain
      parameters:
        - in: query
          name: uid
          description: Command type
          type: string
      responses:
        200:
          description: profile image
          schema:
            $ref: "#/definitions/userInfoResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/notFound"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
    post:
      tags:
        - User
      summary: Sign up A new user
      description: Sign up a new user with profile image, name, id, and so on...
      operationId: postUserInfo
      consumes:
        - multipart/form-data
      produces:
        - text/plain
      parameters:
        - in: formData
          name: profile_image
          type: string
          description: indicates the filename of profile image, if there is no uploaded file, this will be the path of default profile image
        - in: formData
          name: files
          type: file
          required: false
          description: file object of a profile image
        - in: formData
          name: phone
          type: string
          description: phone number
        - in: formData
          name: email
          type: string
          description: email address
        - in: formData
          name: uid
          type: string
          description: user id
        - in: formData
          name: nickname
          type: string
          description: user nickname
        - in: formData
          name: name
          type: string
          description: user name
        - in: formData
          name: password
          type: string
          description: user password
        - in: formData
          name: gender
          type: string
          description: user gender
        - in: formData
          name: perm
          type: string
          description: open scope for profile information
        - in: formData
          name: homepage
          type: string
          description: user homepage
        - in: formData
          name: birth
          type: string
          format: date
          description: user birthday
        - in: formData
          name: affiliation
          type: string
          description: user affiliation
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/created"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
    patch:
      tags:
        - User
      summary: update A new user
      description: update a new user with profile image, name, id, and so on...
      operationId: updateUserInfo
      consumes:
        - multipart/form-data
      produces:
        - text/plain
      parameters:
        - in: formData
          name: profile_image
          type: string
          description: indicates the filename of profile image, if there is no uploaded file, this will be the path of default profile image
        - in: formData
          name: files
          type: file
          required: false
          description: file object of a profile image
        - in: formData
          name: phone
          type: string
          description: phone number
        - in: formData
          name: email
          type: string
          description: email address
        - in: formData
          name: uid
          type: string
          description: user id
        - in: formData
          name: nickname
          type: string
          description: user nickname
        - in: formData
          name: name
          type: string
          description: user name
        - in: formData
          name: password
          type: string
          description: user password
        - in: formData
          name: gender
          type: string
          description: user gender
        - in: formData
          name: perm
          type: string
          description: open scope for profile information
        - in: formData
          name: homepage
          type: string
          description: user homepage
        - in: formData
          name: birth
          type: string
          format: date
          description: user birthday
        - in: formData
          name: affiliation
          type: string
          description: user affiliation
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/OK"
        204:
          description: No Content
          schema:
            $ref: "#/definitions/noContent"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
  /verifyUser:
    get:
      tags:
        - User
      summary: User verification using an email or a phone
      description: Send a verification code to a user via the email or the phone
      operationId: verifyCode
      produces:
        - application/json
        - text/plain
      parameters:
        - in: query
          name: type
          description: Verify method
          type: string
        - in: query
          name: phone
          description: Phone number
          type: string
        - in: query
          name: email
          description: Email address
          type: string
        - in: query
          name: code
          description: Verify code
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/verifyUserResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/conflict"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
    post:
      tags:
        - User
      summary: User verification using an email or a phone
      description: Verify a user using the code which has been sent to the user via the email or the phone
      operationId: getVerificationCode
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: verificationInfo
          schema:
            $ref: "#/definitions/getVerificationCodeRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/OK"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
  /validateToken:
    post:
      tags:
        - User
      summary: Validate the user token
      description: Validate a token
      operationId: validateToken
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - in: body
          name: token
          schema:
            $ref: "#/definitions/validateTokenRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/OK"
        204:
          description: No Content
          schema:
            $ref: "#/definitions/noContent"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/notFound"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
  /signIn:
    post:
      tags:
        - User
      summary: Sign in to the service
      description: Sign In
      operationId: signIn
      consumes:
        - application/json
      produces:
        - application/json
        - text/plain
      parameters:
        - in: body
          name: userCredential
          schema:
            $ref: "#/definitions/signInRequest"
      responses:
        200:
          description: Authorized user information
          schema:
            $ref: "#/definitions/signInResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/notFound"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
  /search:
    post:
      tags:
        - Search
      operationId: doSearch
      summary: Search
      description: Search contents in a database
      consumes:
        - application/json
      produces:
        - application/json
        - text/plain
      parameters:
        - in: body
          name: keyword
          description: Keywords to search contents
          schema:
            $ref: "#/definitions/searchRequest"
      responses:
        200:
          description: Result of search, response type is not specified yet
          schema:
            $ref: "#/definitions/searchResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/badRequest"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/notFound"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/internalServerError"
definitions:
  clientID:
    type: string
    example: 8604f84b-0c74-4fc8-8561-0e38dcc9ca56
  clientKey:
    type: string
    example: 8604f84b-0c74-4fc8-8561-0e38dcc9ca56
  accessToken:
    type: string
    example: TY7BcoIwFEW/SIdEhenSBqd9AR4jEoLsIDoYBMGhgPD1bbpye+fce+515rfiS+lQcxALENTQwyPaKQY23Ls0YfxjfZ15pzZIshQMOF0k73MZaJ9xksujyYZcYq1oa7LhLEkNVatthyUOnF6OxxToSWeS3HI5vfHdvmjqKkvx6Tc4Ficj/2wLuvvvB+5hQlctwVLOgVua7e6c/vmqA8FKWBjvKbqihybZmsNBLCjGR4IuWJha67B5jM/ajwhsXxu2imIvHld958vQ9gTtaYk/fFlm9j3ALw==
  OK:
    type: string
    example: OK
  notFound:
    type: string
    example: Not Found
  noContent:
    type: string
    example: No Content
  internalServerError:
    type: string
    example: Internal Server Error
  badRequest:
    type: string
    example: Bad Request
  created:
    type: string
    example: Created
  conflict:
    type: string
    example: Conflict
  getStorageFolderResponse:
    type: object
    properties:
      root:
        type: string
        description: root folder
      files:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: file or folder name
              example: hello.txt
            type:
              type: string
              description: "type of an object, d: folder, f: file, s: special, e: error, if the target is a symbolic link, there would be a postfix \"l\" for each type."
            size:
              type: number
              format: unit64
              description: filesize in bytes
            time:
              type: string
              format: date-time
              description: last modified time of the object
            mime:
              type: string
              description: mime type
  storageResponse:
    type: array
    items:
      type: object
      properties:
        root:
          type: string
          example: /image
          description: A path where the uploaded files are stored
        filename:
          type: string
          example: myImage.jpg
          description: Uploaded filename
        status:
          type: number
          example: 200
          description: Status of uploading file. [ 200, 400, 403, 500 ]
  verifyUserResponse:
    type: object
    properties:
      accessToken:
        description: Temporary access token
        $ref: "#/definitions/accessToken"
  getVerificationCodeRequest:
    type: object
    properties:
      tauth:
        description: Request temporary authentication key
        type: boolean
        example: true
      email:
        description: Email address
        type: string
        example: info@futuremobile.net
      phone:
        description: Phone number
        type: string
        example: +12-12-1234-1234
  validateTokenRequest:
    type: object
    properties:
      clientKey:
        description: Client Key
        $ref: "#/definitions/clientKey"
      clientID:
        description: Client ID
        $ref: "#/definitions/clientID"
      accessToken:
        description: Access Token
        $ref: "#/definitions/accessToken"
  userInfoResponse:
    type: object
    properties:
      email:
        type: string
        example: info@futuremobile.net
      name:
        type: string
        example: info
      gender:
        type: string
        example: male
      homepage:
        type: string
        example: https://futuremobile.net
  signInResponse:
    type: object
    properties:
      accessToken:
        description: Access Token
        $ref: "#/definitions/accessToken"
      refreshToken:
        description: Refresh Token
        type: string
        example: TY7BcoIwFEW/SIdEhenSBqd9AR4jEoLsIDoYBMGhgPD1bbpye+fce+515rfiS+lQcxALENTQwyPaKQY23Ls0YfxjfZ15pzZIshQMOF0k73MZaJ9xksujyYZcYq1oa7LhLEkNVatthyUOnF6OxxToSWeS3HI5vfHdvmjqKkvx6Tc4Ficj/2wLuvvvB+5hQlctwVLOgVua7e6c/vmqA8FKWBjvKbqihybZmsNBLCjGR4IuWJha67B5jM/ajwhsXxu2imIvHld958vQ9gTtaYk/fFlm9j3ALw==
      createdAt:
        description: When the authorized information is created
        type: string
        example: 2019-07-15 23:15:18
      expiresIn:
        description: Valid until given datetime
        type: string
        example: 2019-07-15 23:15:18
      tokenType:
        description: A method for validating a token
        type: string
        example: bearer
    required:
      - accessToken
      - refreshToken
      - createdAt
      - expiresIn
      - tokenType
  signInRequest:
    type: object
    properties:
      clientID:
        description: Client ID
        $ref: "#/definitions/clientID"
      clientKey:
        description: Client Key
        $ref: "#/definitions/clientKey"
      ID:
        description: User ID
        type: string
        example: info
      password:
        description: User Password
        type: string
        format: password
        example: password
    required:
      - clientID
      - clientKey
      - ID
      - password
  searchResponse:
    type: object
    properties:
      clientID:
        description: Client ID
        $ref: "#/definitions/clientID"
      clientKey:
        description: Client Key
        $ref: "#/definitions/clientKey"
  searchRequest:
    type: object
    properties:
      keyword:
        description: Keywords for searching contents
        type: string
        example: hello
      clientID:
        description: Client ID
        $ref: "#/definitions/clientID"
      clientKey:
        description: Client key
        $ref: "#/definitions/clientKey"
      accessToken:
        description: Access token
        $ref: "#/definitions/accessToken"
    required:
      - keyword
      - clientID
      - clientKey
  rss:
    type: object
    properties:
      rdf:
        xml:
          namespace: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'
          attribute: true
      dc:
        xml:
          namespace: 'http://purl.org/dc/elements/1.1'
          attribute: true
      taxo:
        xml:
          namespace: 'http://purl.org/rss/1.0/modules/taxonomy/'
          attribute: true
      atom:
        xml:
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: true
      activity:
        xml:
          namespace: 'http://activitystrea.ms/spec/1.0/'
          attribute: true
      channel:
        type: object
        properties:
          title:
            type: string
            example: RSS of futuremobile.net
          link:
            type: string
            example: https://futuremobile.net
          description:
            type: string
            example: <![CDATA[Software]]>
          generator:
            type: string
            example: futuremobile.net
          webMaster:
            type: string
            example: info@futuremobile.net
          ttl:
            type: number
            format: uint64
            example: 100
          image:
            type: object
            properties:
              url:
                type: string
                example: <![CDATA[https://futuremobile.net/site.png]]>
              title:
                type: string
                example: futuremobile.net
              link:
                type: string
                example: https://futuremobile.net
          language:
            type: string
            example: ko-KR
          pubDate:
            type: string
            example: Sat, 10 Aug 2019 17:38:23 +0900
          link:
            type: object
            xml:
              prefix: 'atom'
            properties:
              href:
                type: string
                xml:
                  attribute: true
                example: https://futuremobile.net/rss
              rel:
                type: string
                xml:
                  attribute: true
                example: self
              type:
                type: string
                xml:
                  attribute: true
                example: application/rss+xml
          item:
            type: array
            items:
              type: object
              properties:
                guid:
                  type: object
                  properties:
                    isPermaLink:
                      type: boolean
                      xml:
                        attribute: true
                      example: true
                    value:
                      type: string
                      xml:
                        wrapped: false
                      example: https://futuremobile.net/bulletin/1
                title:
                  type: string
                  example: Example of a text in the bulletin board
                link:
                  type: string
                  example: https://futuremobile.net/bulletin/1
                description:
                  type: string
                  example: <![CDATA[Retrieved contents]]>
                author:
                  type: string
                  example: info
                category:
                  type: string
                  example: example
                pubDate:
                  type: string
                  example: Fri, 23 Nov 2018 12:19:00 +0900
                tag:
                  type: string
                  example: <![CDATA[example,bulletin,swagger]]>
                verb:
                  type: string
                  xml:
                    prefix: 'activity'
                  example: http://activitystrea.ms/schema/1.0/post
                object-type:
                  type: string
                  xml:
                    prefix: 'activity'
                  example: http://activitystrea.ms/schema/1.0/blog-entry
